#!/bin/bash

# Jorge Langa - 2014/10/17

# This little script converts a plain text mpileup (or pileup file; Otsanda has called it this way) into multiple 
# gzipped mpileup files, one per region. In this case chromosomes from 1 to 26 and X.

# Filter: Does the filtering with awk. Checks the first column and if the condition is satisfied, prints the entire line
#       Inputs:     $1: The file to be processed
#                   $2: The region (chromosome)
#       Outputs:    STDOUT: The subset of the mpileup file

filter(){
    awk -v chromosome=$2 '{ if( $1 == chromosome ) print $0 }' $1
}

# Export function so GNU Parallel can use it
export -f filter

# Do `filter` in parallel and gzip the output

# Chr X is special: X is not a number
awk '{ if($1 == "X" ) print $0 }' genome/popoolation/Fst/3pop.mpileup | pigz -9 > genome/popoolation/Fst/3pop.X.mpileup.gz &

parallel                                            \
    filter                                          \
        genome/popoolation/Fst/3pop.mpileup         \
        {}                                          \
    \| pigz -9                                      \
    \> genome/popoolation/Fst/3pop.{}.mpileup.gz    \
::: {10..19} 1 {20..26} {2..9}

# Compress the 3pop.mpileup
#pigz -9 genome/popoolation/Fst/3pop.mpileup



#for i in {10..19} 1 {20..26} {2..9} \"X\"
#do
#    sem filter genome/popoolation/Fst/3pop.mpileup $i | pigz -9 > genome/popoolation/Fst/3pop.${i}.mpileup.gz
#done




#filter genome/popoolation/Fst/3pop.mpileup 10 | pigz -9 > genome/popoolation/Fst/3pop.10.mpileup.gz
